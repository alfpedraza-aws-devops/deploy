---
# Install the Jenkins plugins

- name: Start the Jenkins service so the plugins can be installed
  service:
    name: jenkins
    enabled: yes
    state: started
  register: jenkins_started

- name: Wait until the Jenkins service is available
  uri:
    url: "http://localhost:8080/"
    force_basic_auth: yes
    user: admin
    password: "{{ jenkins_admin_password }}"
    return_content: yes
    status_code: [200, 404]
  register: jenkins_wait
  until: jenkins_wait.status == 200 and jenkins_wait.content.find('Please wait while Jenkins is getting ready to work') == -1
  retries: 30
  delay: 6
  when: jenkins_started.changed

- name: Install the "git" Jenkins plugin. Required to checkout code
  jenkins_plugin:
     name: git
     state: present
  register: jenkins_git_plugin
  until: jenkins_git_plugin is not failed
  retries: 5

- name: Install the job-dsl Jenkins plugin. Required to create projects programatically
  jenkins_plugin:
    name: job-dsl
    state: present
  register: jenkins_job_dsl_plugin
  until: jenkins_job_dsl_plugin is not failed
  retries: 5

- name: Install the workflow-aggregator Jenkins plugin. It's the pipeline plugin
  jenkins_plugin:
    name: workflow-aggregator
    state: present
  register: jenkins_wfa_plugin
  until: jenkins_wfa_plugin is not failed
  retries: 5

- name: Install the workflow-cps Jenkins plugin. Required to run the groovy Jenkinsfile script
  jenkins_plugin:
    name: workflow-cps
    timeout: "120"
    state: present
  register: jenkins_wfc_plugin
  until: jenkins_wfc_plugin is not failed
  retries: 5

- name: Add the jenkins user to the docker user group. Required to run docker with the jenkins user
  user:
    name: jenkins
    groups: [docker]
    append: yes
    state: present

- name: Check if any plugin was updated
  set_fact:
    any_jenkins_plugin_changed: >
      jenkins_git_plugin.changed or jenkins_job_dsl_plugin.changed or
      jenkins_wfa_plugin.changed or jenkins_wfc_plugin.changed

- name: Wait for plugins to be installed
  uri:
    url: "http://localhost:8080/updateCenter/installStatus"
    force_basic_auth: yes
    user: admin
    password: "{{ jenkins_admin_password }}"
    return_content: yes
    body_format: json
  register: plugin_status
  until: "'Pending' not in plugin_status.json.data.jobs|map(attribute='installStatus')"
  retries: 30
  delay: 10
  when: any_jenkins_plugin_changed

- name: Restart the Jenkins service to apply all the changes
  service:
    name: jenkins
    enabled: yes
    state: restarted
  when: any_jenkins_plugin_changed