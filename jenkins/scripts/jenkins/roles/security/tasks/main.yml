---
# Setup the Jenkins authorizationStrategy and securityRealm
# properties in the jenkins config.file

- name: Copy the jenkins-config.xml file to the Jenkins folder
  copy:
    src: "jenkins-config.xml"
    dest: "~jenkins/config.xml"
    force: yes
  register: jenkins_config_change

# Setup an admin user and its password for Jenkins

- name: Wait until the secret files are present before continuing
  wait_for:
    path: /dev/shm/aws-devops/credentials/jenkins-admin-password

- set_fact:
    jenkins_admin_password: "{{ lookup('file', '/dev/shm/aws-devops/credentials/jenkins-admin-password') }}"

- name: Get the hash value for the jenkins admin password
  command:
    cmd: "echo -n '{{ jenkins_admin_password }}{salt_value}' | sha256sum - | awk '{ print $1; }'"
  register: jenkins_password_hash

- name: Create the admin folder under the Jenkins users folder
  file:
    path: "~jenkins/users/admin"
    owner: jenkins
    group: jenkins
    mode: "0755"
    recurse: yes
    state: directory

- name: Generate the admin user configuration file from the template
  template:
    src: "admin-config.xml.j2"
    dest: "~jenkins/users/admin/config.xml"
    force: no
  register: jenkins_admin_config
    
- name: Restart the Jenkins service if any file changed
  service:
    name: jenkins
    enabled: yes
    state: restarted
  when: jenkins_config_change.changed or jenkins_admin_config.changed