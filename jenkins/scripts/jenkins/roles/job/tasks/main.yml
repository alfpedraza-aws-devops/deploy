---
# Install the python-jenkins package. Required to run "jenkins_job" task

- name: Add the Python-Jenkins yum repository
  yum_repository:
    name: pythonjenkins_repo
    description: Python Jenkins Package Repository
    baseurl: https://download-ib01.fedoraproject.org/pub/epel/7/aarch64/
    state: present

- name: Import the Python-Jenkins repository GPG key
  rpm_key:
    key: https://download-ib01.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
    state: present

- name: Install the Python-Jenkins package
  yum:
    name: python-jenkins-0.4.14-2.el7.noarch
    state: present
  register: python_jenkins_package
  until: python_jenkins_package is not failed
  retries: 5

# Wait until the Jenkins service is up and running

- name: Start the Jenkins service so the job can be created
  service:
    name: jenkins
    enabled: yes
    state: started

- name: Wait until the Jenkins service is available
  uri:
    url: "http://localhost:8080/"
    force_basic_auth: yes
    user: admin
    password: "{{ jenkins_admin_password }}"
    return_content: yes
    status_code: [200, 404, 503]
  register: jenkins_wait
  until: jenkins_wait.status == 200 and jenkins_wait.content.find('Please wait while Jenkins is getting ready to work') == -1
  retries: 30
  delay: 6

# Install the Jenkins job

- name: Get the Jenkins crumb. Required to post data to the Jenkins server.
  uri:
    url: http://localhost:8080/crumbIssuer/api/json
    force_basic_auth: yes
    user: admin
    password: "{{ jenkins_admin_password }}"
    return_content: yes
  register: jenkins_crumb

- name: Check if the Jenkins job exists
  uri:
    url: "http://localhost:8080/job/{{ jenkins_job_name }}/config.xml"
    force_basic_auth: yes
    user: admin
    password: "{{ jenkins_admin_password }}"
    return_content: yes
    status_code: [200, 404]
  register: jenkins_job

- name: Delete the job only if exists and its content is different
  uri:
    method: "DELETE"
    headers: '{"{{ jenkins_crumb.json.crumbRequestField }}":"{{ jenkins_crumb.json.crumb }}","Cookie":"{{ jenkins_crumb.set_cookie }}"'
    url: "http://localhost:8080/job/{{ jenkins_job_name }}"
    force_basic_auth: yes
    user: admin
    password: "{{ jenkins_admin_password }}"
    status_code: [200]
  register: jenkins_job_deleted
  when: jenkins_job.status == 200 and jenkins_job.content != lookup('template', 'templates/job-config.xml.j2')

- name: Create the Jenkins job
  uri:
    method: "POST"
    headers: '{"{{ jenkins_crumb.json.crumbRequestField }}":"{{ jenkins_crumb.json.crumb }}","Cookie":"{{ jenkins_crumb.set_cookie }}","Content-Type":"text/xml"}'
    url: "http://localhost:8080/createItem?name={{ jenkins_job_name }}"
    body: "{{ lookup('template', 'templates/job-config.xml.j2') }}"
    force_basic_auth: yes
    user: admin
    password: "{{ jenkins_admin_password }}"
    status_code: [201]
  register: jenkins_job_setup
  when: jenkins_job.status == 404 or jenkins_job_deleted.changed

- name: Store the status of the job setup task
  set_fact:
    jenkins_job_setup_changed: jenkins_job_setup.changed