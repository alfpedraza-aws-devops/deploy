node {

  stage("Build Fibonacci") {
    def tag = "0.1.4.${env.BUILD_ID}"
    def image = "${ecr_url}/aws-devops-fibonacci:${tag}"
    git(url: "https://github.com/alfpedraza-aws-devops/fibonacci")
    sh """
      aws ecr get-login-password --region ${params.REGION_NAME} | docker login --username AWS --password-stdin ${params.ECR_URL}
      docker build -t ${image} .
      docker push ${image}
    """
  }

  stage("Build Kubernetes API") {
    def tag = "0.1.11.${env.BUILD_ID}"
    def image = "${ecr_url}/aws-devops-kubernetes-api:${tag}"
    git(url: "https://github.com/alfpedraza-aws-devops/kubernetes-api")
    sh """
      aws ecr get-login-password --region ${params.REGION_NAME} | docker login --username AWS --password-stdin ${params.ECR_URL}
      docker build -t ${image} .
      docker push ${image}
    """
  }

  stage("Build Web UI") {
    def tag = "0.1.4.${env.BUILD_ID}"
    def image = "${ecr_url}/aws-devops-web-ui:${tag}"
    git(url: "https://github.com/alfpedraza-aws-devops/web-ui")
    sh """
      aws ecr get-login-password --region ${params.REGION_NAME} | docker login --username AWS --password-stdin ${params.ECR_URL}
      docker build -t ${image} .
      docker push ${image}
    """
  }

  stage("Update VPC") {
    
  }

  stage("Update DEV environment") {
    git(url: "https://github.com/alfpedraza-aws-devops/deployment")
    withCredentials([usernamePassword(credentialsId: "aws_credentials", usernameVariable: "AWS_ACCESS_KEY_ID", passwordVariable: "AWS_SECRET_ACCESS_KEY")]) {
      sh """
        cd ./dev/state
        terraform init -input=false
        terraform apply -input=false -lock=true -auto-approve \
          -var "account_id=${params.ACCOUNT_ID}" \
          -var "region_name=${params.REGION_NAME}" \
          -var "project_name=${params.PROJECT_NAME}"
        
        cd ..
        terraform init -input=false \
          -backend-config="bucket=${params.ACCOUNT_ID}-${params.PROJECT_NAME}  -dev-terraform-state" \
          -backend-config="key=terraform.tfstate" \
          -backend-config="region=${params.REGION_NAME}" \
          -backend-config="dynamodb_table=${params.ACCOUNT_ID}-${params.PROJECT_NAME}  -dev-terraform-lock" \
          -backend-config="encrypt=true"
        terraform apply -input=false -lock=true -auto-approve \
          -var "account_id=${params.ACCOUNT_ID}" \
          -var "region_name=${params.REGION_NAME}" \
          -var "project_name=${params.PROJECT_NAME}"
      """
    }
  }

  stage("Deploy to DEV environment") {
    echo "Deploy to DEV environment"
  }

  stage("Production Approval") {
    //input "Deploy to PROD?"
  }

  stage("Update PROD environment") {
    echo "Update PROD environment"
  }

  stage("Deploy to PROD environment") {
    echo "Deploy to PROD environment"
  }
  
}