def buildAndPushImage(regionName, gitUrl, ecrUrl, rawImageName, rawImageTag, buildId) {
  def imageTag  = "${rawImageTag}.${buildId}"
  def imageName = "${ecrUrl}/${rawImageName}:${imageTag}"
  git(gitUrl)
  sh """
    aws ecr get-login-password --region ${regionName} | \
    docker login --username AWS --password-stdin ${ecrUrl}
    docker build -t ${imageName} .
    docker push ${imageName}
  """
}

node {

  stage("Build Fibonacci") {
    buildAndPushImage(
      regionName:   params.REGION_NAME,
      gitUrl:       "https://github.com/alfpedraza-aws-devops/fibonacci",
      ecrUrl:       params.ECR_URL,
      rawImageName: "aws-devops-fibonacci",
      rawImageTag:  "0.1.4",
      buildId:      env.BUILD_ID)
  }

  stage("Build Kubernetes API") {
    buildAndPushImage(
      regionName:   params.REGION_NAME,
      gitUrl:       "https://github.com/alfpedraza-aws-devops/kubernetes-api",
      ecrUrl:       params.ECR_URL,
      rawImageName: "aws-devops-kubernetes-api",
      rawImageTag:  "0.1.11",
      buildId:      env.BUILD_ID)
  }

  stage("Build Web UI") {
    buildAndPushImage(
      regionName:   params.REGION_NAME,
      gitUrl:       "https://github.com/alfpedraza-aws-devops/web-ui",
      ecrUrl:       params.ECR_URL,
      rawImageName: "aws-devops-web-ui",
      rawImageTag:  "0.1.4",
      buildId:      env.BUILD_ID)
  }

  stage("Update VPC") {
    git("https://github.com/alfpedraza-aws-devops/deployment")
    withCredentials([usernamePassword(
    credentialsId: "aws_credentials",
    usernameVariable: "AWS_ACCESS_KEY_ID",
    passwordVariable: "AWS_SECRET_ACCESS_KEY")]) {
      sh """
        cd ./vpc
        ./jenkins/jobs/aws-devops/apply-terraform.sh \
          ${params.ACCOUNT_ID} \
          ${params.REGION_NAME} \
          ${params.PROJECT_NAME} \
          "vpc"
      """
    }
  }

  stage("Update DEV environment") {
    git("https://github.com/alfpedraza-aws-devops/deployment")
    withCredentials([usernamePassword(
    credentialsId: "aws_credentials",
    usernameVariable: "AWS_ACCESS_KEY_ID",
    passwordVariable: "AWS_SECRET_ACCESS_KEY")]) {
      sh """
        cd ./dev
        ./jenkins/jobs/aws-devops/apply-terraform.sh \
          ${params.ACCOUNT_ID} \
          ${params.REGION_NAME} \
          ${params.PROJECT_NAME} \
          "dev"
      """
    }
  }

  stage("Deploy to DEV environment") {
    echo "Deploy to DEV environment"
  }

  stage("Production Approval") {
    input "Deploy to PROD?"
  }

  stage("Update PROD environment") {
    git("https://github.com/alfpedraza-aws-devops/deployment")
    withCredentials([usernamePassword(
    credentialsId: "aws_credentials",
    usernameVariable: "AWS_ACCESS_KEY_ID",
    passwordVariable: "AWS_SECRET_ACCESS_KEY")]) {
      sh """
        cd ./prod
        ./jenkins/jobs/aws-devops/apply-terraform.sh \
          ${params.ACCOUNT_ID} \
          ${params.REGION_NAME} \
          ${params.PROJECT_NAME} \
          "prod"
      """
    }
  }

  stage("Deploy to PROD environment") {
    echo "Deploy to PROD environment"
  }
  
}